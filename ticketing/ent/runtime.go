// Code generated by ent, DO NOT EDIT.

package ent

import (
	"ticketing/ent/concert"
	"ticketing/ent/concertsession"
	"ticketing/ent/genre"
	"ticketing/ent/schema"
	"ticketing/ent/section"
	"ticketing/ent/ticket"

	"github.com/google/uuid"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	concertFields := schema.Concert{}.Fields()
	_ = concertFields
	// concertDescTitle is the schema descriptor for title field.
	concertDescTitle := concertFields[1].Descriptor()
	// concert.TitleValidator is a validator for the "title" field. It is called by the builders before save.
	concert.TitleValidator = concertDescTitle.Validators[0].(func(string) error)
	// concertDescArtist is the schema descriptor for artist field.
	concertDescArtist := concertFields[2].Descriptor()
	// concert.ArtistValidator is a validator for the "artist" field. It is called by the builders before save.
	concert.ArtistValidator = concertDescArtist.Validators[0].(func(string) error)
	// concertDescImageUrl is the schema descriptor for imageUrl field.
	concertDescImageUrl := concertFields[3].Descriptor()
	// concert.ImageUrlValidator is a validator for the "imageUrl" field. It is called by the builders before save.
	concert.ImageUrlValidator = concertDescImageUrl.Validators[0].(func(string) error)
	// concertDescDescription is the schema descriptor for description field.
	concertDescDescription := concertFields[4].Descriptor()
	// concert.DefaultDescription holds the default value on creation for the description field.
	concert.DefaultDescription = concertDescDescription.Default.(string)
	// concertDescHeadline is the schema descriptor for headline field.
	concertDescHeadline := concertFields[5].Descriptor()
	// concert.DefaultHeadline holds the default value on creation for the headline field.
	concert.DefaultHeadline = concertDescHeadline.Default.(string)
	// concertDescFeatured is the schema descriptor for featured field.
	concertDescFeatured := concertFields[6].Descriptor()
	// concert.DefaultFeatured holds the default value on creation for the featured field.
	concert.DefaultFeatured = concertDescFeatured.Default.(bool)
	// concertDescID is the schema descriptor for id field.
	concertDescID := concertFields[0].Descriptor()
	// concert.DefaultID holds the default value on creation for the id field.
	concert.DefaultID = concertDescID.Default.(func() uuid.UUID)
	concertsessionFields := schema.ConcertSession{}.Fields()
	_ = concertsessionFields
	// concertsessionDescID is the schema descriptor for id field.
	concertsessionDescID := concertsessionFields[0].Descriptor()
	// concertsession.DefaultID holds the default value on creation for the id field.
	concertsession.DefaultID = concertsessionDescID.Default.(func() uuid.UUID)
	genreFields := schema.Genre{}.Fields()
	_ = genreFields
	// genreDescName is the schema descriptor for name field.
	genreDescName := genreFields[1].Descriptor()
	// genre.NameValidator is a validator for the "name" field. It is called by the builders before save.
	genre.NameValidator = genreDescName.Validators[0].(func(string) error)
	// genreDescID is the schema descriptor for id field.
	genreDescID := genreFields[0].Descriptor()
	// genre.DefaultID holds the default value on creation for the id field.
	genre.DefaultID = genreDescID.Default.(func() uuid.UUID)
	sectionFields := schema.Section{}.Fields()
	_ = sectionFields
	// sectionDescName is the schema descriptor for name field.
	sectionDescName := sectionFields[1].Descriptor()
	// section.NameValidator is a validator for the "name" field. It is called by the builders before save.
	section.NameValidator = sectionDescName.Validators[0].(func(string) error)
	// sectionDescID is the schema descriptor for id field.
	sectionDescID := sectionFields[0].Descriptor()
	// section.DefaultID holds the default value on creation for the id field.
	section.DefaultID = sectionDescID.Default.(func() uuid.UUID)
	ticketFields := schema.Ticket{}.Fields()
	_ = ticketFields
	// ticketDescID is the schema descriptor for id field.
	ticketDescID := ticketFields[0].Descriptor()
	// ticket.DefaultID holds the default value on creation for the id field.
	ticket.DefaultID = ticketDescID.Default.(func() uuid.UUID)
}
