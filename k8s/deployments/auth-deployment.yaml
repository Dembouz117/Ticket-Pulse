apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-deployment
  namespace: cs203
spec:
  replicas: 1
  selector:
    matchLabels:
      app: auth
  template:
    metadata:
      labels:
        app: auth
        type: auth
    spec:
      terminationGracePeriodSeconds: 3
      containers:
        - name: auth
          readinessProbe:
            httpGet:
              path: /auth/health
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 10
          imagePullPolicy: Always
          image: tigercxx/cs203-auth:v2.2.0
          resources:
            limits:
              memory: "500Mi"
              cpu: "200m"
          env:
            - name: POSTGRES_ADDRESS
              valueFrom:
                secretKeyRef:
                  name: db-redis-secrets
                  key: POSTGRES_ADDRESS
            - name: REDIS_ADDRESS
              valueFrom:
                secretKeyRef:
                  name: db-redis-secrets
                  key: REDIS_ADDRESS
            - name: SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: auth-secrets
                  key: SECRET_KEY
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: aws-secrets
                  key: AWS_ACCESS_KEY_ID
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: aws-secrets
                  key: AWS_SECRET_ACCESS_KEY
            - name: COOKIE_DOMAIN
              value: "localhost"
            - name: ENVIRONMENT
              value: "production"
          ports:
            - containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: auth-service
  namespace: cs203
spec:
  type: NodePort
  selector:
    app: auth
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
      nodePort: 30081
