// GENERATED CODE -- DO NOT EDIT!

// Original file comments:
// Code generated by entproto. DO NOT EDIT.
'use strict';
var grpc = require('@grpc/grpc-js');
var entpb_pb = require('./entpb_pb.js');
var google_protobuf_empty_pb = require('google-protobuf/google/protobuf/empty_pb.js');
var google_protobuf_wrappers_pb = require('google-protobuf/google/protobuf/wrappers_pb.js');

function serialize_entpb_BatchCreateConcertSessionsRequest(arg) {
  if (!(arg instanceof entpb_pb.BatchCreateConcertSessionsRequest)) {
    throw new Error('Expected argument of type entpb.BatchCreateConcertSessionsRequest');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_entpb_BatchCreateConcertSessionsRequest(buffer_arg) {
  return entpb_pb.BatchCreateConcertSessionsRequest.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_entpb_BatchCreateConcertSessionsResponse(arg) {
  if (!(arg instanceof entpb_pb.BatchCreateConcertSessionsResponse)) {
    throw new Error('Expected argument of type entpb.BatchCreateConcertSessionsResponse');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_entpb_BatchCreateConcertSessionsResponse(buffer_arg) {
  return entpb_pb.BatchCreateConcertSessionsResponse.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_entpb_BatchCreateConcertsRequest(arg) {
  if (!(arg instanceof entpb_pb.BatchCreateConcertsRequest)) {
    throw new Error('Expected argument of type entpb.BatchCreateConcertsRequest');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_entpb_BatchCreateConcertsRequest(buffer_arg) {
  return entpb_pb.BatchCreateConcertsRequest.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_entpb_BatchCreateConcertsResponse(arg) {
  if (!(arg instanceof entpb_pb.BatchCreateConcertsResponse)) {
    throw new Error('Expected argument of type entpb.BatchCreateConcertsResponse');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_entpb_BatchCreateConcertsResponse(buffer_arg) {
  return entpb_pb.BatchCreateConcertsResponse.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_entpb_BatchCreateSectionsRequest(arg) {
  if (!(arg instanceof entpb_pb.BatchCreateSectionsRequest)) {
    throw new Error('Expected argument of type entpb.BatchCreateSectionsRequest');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_entpb_BatchCreateSectionsRequest(buffer_arg) {
  return entpb_pb.BatchCreateSectionsRequest.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_entpb_BatchCreateSectionsResponse(arg) {
  if (!(arg instanceof entpb_pb.BatchCreateSectionsResponse)) {
    throw new Error('Expected argument of type entpb.BatchCreateSectionsResponse');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_entpb_BatchCreateSectionsResponse(buffer_arg) {
  return entpb_pb.BatchCreateSectionsResponse.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_entpb_BatchCreateTicketsRequest(arg) {
  if (!(arg instanceof entpb_pb.BatchCreateTicketsRequest)) {
    throw new Error('Expected argument of type entpb.BatchCreateTicketsRequest');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_entpb_BatchCreateTicketsRequest(buffer_arg) {
  return entpb_pb.BatchCreateTicketsRequest.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_entpb_BatchCreateTicketsResponse(arg) {
  if (!(arg instanceof entpb_pb.BatchCreateTicketsResponse)) {
    throw new Error('Expected argument of type entpb.BatchCreateTicketsResponse');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_entpb_BatchCreateTicketsResponse(buffer_arg) {
  return entpb_pb.BatchCreateTicketsResponse.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_entpb_Concert(arg) {
  if (!(arg instanceof entpb_pb.Concert)) {
    throw new Error('Expected argument of type entpb.Concert');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_entpb_Concert(buffer_arg) {
  return entpb_pb.Concert.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_entpb_ConcertSession(arg) {
  if (!(arg instanceof entpb_pb.ConcertSession)) {
    throw new Error('Expected argument of type entpb.ConcertSession');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_entpb_ConcertSession(buffer_arg) {
  return entpb_pb.ConcertSession.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_entpb_CreateConcertRequest(arg) {
  if (!(arg instanceof entpb_pb.CreateConcertRequest)) {
    throw new Error('Expected argument of type entpb.CreateConcertRequest');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_entpb_CreateConcertRequest(buffer_arg) {
  return entpb_pb.CreateConcertRequest.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_entpb_CreateConcertSessionRequest(arg) {
  if (!(arg instanceof entpb_pb.CreateConcertSessionRequest)) {
    throw new Error('Expected argument of type entpb.CreateConcertSessionRequest');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_entpb_CreateConcertSessionRequest(buffer_arg) {
  return entpb_pb.CreateConcertSessionRequest.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_entpb_CreateSectionRequest(arg) {
  if (!(arg instanceof entpb_pb.CreateSectionRequest)) {
    throw new Error('Expected argument of type entpb.CreateSectionRequest');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_entpb_CreateSectionRequest(buffer_arg) {
  return entpb_pb.CreateSectionRequest.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_entpb_CreateTicketRequest(arg) {
  if (!(arg instanceof entpb_pb.CreateTicketRequest)) {
    throw new Error('Expected argument of type entpb.CreateTicketRequest');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_entpb_CreateTicketRequest(buffer_arg) {
  return entpb_pb.CreateTicketRequest.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_entpb_DeleteConcertRequest(arg) {
  if (!(arg instanceof entpb_pb.DeleteConcertRequest)) {
    throw new Error('Expected argument of type entpb.DeleteConcertRequest');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_entpb_DeleteConcertRequest(buffer_arg) {
  return entpb_pb.DeleteConcertRequest.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_entpb_DeleteConcertSessionRequest(arg) {
  if (!(arg instanceof entpb_pb.DeleteConcertSessionRequest)) {
    throw new Error('Expected argument of type entpb.DeleteConcertSessionRequest');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_entpb_DeleteConcertSessionRequest(buffer_arg) {
  return entpb_pb.DeleteConcertSessionRequest.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_entpb_DeleteSectionRequest(arg) {
  if (!(arg instanceof entpb_pb.DeleteSectionRequest)) {
    throw new Error('Expected argument of type entpb.DeleteSectionRequest');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_entpb_DeleteSectionRequest(buffer_arg) {
  return entpb_pb.DeleteSectionRequest.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_entpb_DeleteTicketRequest(arg) {
  if (!(arg instanceof entpb_pb.DeleteTicketRequest)) {
    throw new Error('Expected argument of type entpb.DeleteTicketRequest');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_entpb_DeleteTicketRequest(buffer_arg) {
  return entpb_pb.DeleteTicketRequest.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_entpb_GetConcertRequest(arg) {
  if (!(arg instanceof entpb_pb.GetConcertRequest)) {
    throw new Error('Expected argument of type entpb.GetConcertRequest');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_entpb_GetConcertRequest(buffer_arg) {
  return entpb_pb.GetConcertRequest.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_entpb_GetConcertSessionRequest(arg) {
  if (!(arg instanceof entpb_pb.GetConcertSessionRequest)) {
    throw new Error('Expected argument of type entpb.GetConcertSessionRequest');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_entpb_GetConcertSessionRequest(buffer_arg) {
  return entpb_pb.GetConcertSessionRequest.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_entpb_GetSectionRequest(arg) {
  if (!(arg instanceof entpb_pb.GetSectionRequest)) {
    throw new Error('Expected argument of type entpb.GetSectionRequest');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_entpb_GetSectionRequest(buffer_arg) {
  return entpb_pb.GetSectionRequest.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_entpb_GetTicketRequest(arg) {
  if (!(arg instanceof entpb_pb.GetTicketRequest)) {
    throw new Error('Expected argument of type entpb.GetTicketRequest');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_entpb_GetTicketRequest(buffer_arg) {
  return entpb_pb.GetTicketRequest.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_entpb_ListConcertRequest(arg) {
  if (!(arg instanceof entpb_pb.ListConcertRequest)) {
    throw new Error('Expected argument of type entpb.ListConcertRequest');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_entpb_ListConcertRequest(buffer_arg) {
  return entpb_pb.ListConcertRequest.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_entpb_ListConcertResponse(arg) {
  if (!(arg instanceof entpb_pb.ListConcertResponse)) {
    throw new Error('Expected argument of type entpb.ListConcertResponse');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_entpb_ListConcertResponse(buffer_arg) {
  return entpb_pb.ListConcertResponse.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_entpb_ListConcertSessionRequest(arg) {
  if (!(arg instanceof entpb_pb.ListConcertSessionRequest)) {
    throw new Error('Expected argument of type entpb.ListConcertSessionRequest');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_entpb_ListConcertSessionRequest(buffer_arg) {
  return entpb_pb.ListConcertSessionRequest.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_entpb_ListConcertSessionResponse(arg) {
  if (!(arg instanceof entpb_pb.ListConcertSessionResponse)) {
    throw new Error('Expected argument of type entpb.ListConcertSessionResponse');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_entpb_ListConcertSessionResponse(buffer_arg) {
  return entpb_pb.ListConcertSessionResponse.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_entpb_ListSectionRequest(arg) {
  if (!(arg instanceof entpb_pb.ListSectionRequest)) {
    throw new Error('Expected argument of type entpb.ListSectionRequest');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_entpb_ListSectionRequest(buffer_arg) {
  return entpb_pb.ListSectionRequest.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_entpb_ListSectionResponse(arg) {
  if (!(arg instanceof entpb_pb.ListSectionResponse)) {
    throw new Error('Expected argument of type entpb.ListSectionResponse');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_entpb_ListSectionResponse(buffer_arg) {
  return entpb_pb.ListSectionResponse.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_entpb_ListTicketRequest(arg) {
  if (!(arg instanceof entpb_pb.ListTicketRequest)) {
    throw new Error('Expected argument of type entpb.ListTicketRequest');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_entpb_ListTicketRequest(buffer_arg) {
  return entpb_pb.ListTicketRequest.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_entpb_ListTicketResponse(arg) {
  if (!(arg instanceof entpb_pb.ListTicketResponse)) {
    throw new Error('Expected argument of type entpb.ListTicketResponse');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_entpb_ListTicketResponse(buffer_arg) {
  return entpb_pb.ListTicketResponse.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_entpb_Section(arg) {
  if (!(arg instanceof entpb_pb.Section)) {
    throw new Error('Expected argument of type entpb.Section');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_entpb_Section(buffer_arg) {
  return entpb_pb.Section.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_entpb_Ticket(arg) {
  if (!(arg instanceof entpb_pb.Ticket)) {
    throw new Error('Expected argument of type entpb.Ticket');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_entpb_Ticket(buffer_arg) {
  return entpb_pb.Ticket.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_entpb_UpdateConcertRequest(arg) {
  if (!(arg instanceof entpb_pb.UpdateConcertRequest)) {
    throw new Error('Expected argument of type entpb.UpdateConcertRequest');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_entpb_UpdateConcertRequest(buffer_arg) {
  return entpb_pb.UpdateConcertRequest.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_entpb_UpdateConcertSessionRequest(arg) {
  if (!(arg instanceof entpb_pb.UpdateConcertSessionRequest)) {
    throw new Error('Expected argument of type entpb.UpdateConcertSessionRequest');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_entpb_UpdateConcertSessionRequest(buffer_arg) {
  return entpb_pb.UpdateConcertSessionRequest.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_entpb_UpdateSectionRequest(arg) {
  if (!(arg instanceof entpb_pb.UpdateSectionRequest)) {
    throw new Error('Expected argument of type entpb.UpdateSectionRequest');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_entpb_UpdateSectionRequest(buffer_arg) {
  return entpb_pb.UpdateSectionRequest.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_entpb_UpdateTicketRequest(arg) {
  if (!(arg instanceof entpb_pb.UpdateTicketRequest)) {
    throw new Error('Expected argument of type entpb.UpdateTicketRequest');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_entpb_UpdateTicketRequest(buffer_arg) {
  return entpb_pb.UpdateTicketRequest.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_google_protobuf_Empty(arg) {
  if (!(arg instanceof google_protobuf_empty_pb.Empty)) {
    throw new Error('Expected argument of type google.protobuf.Empty');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_google_protobuf_Empty(buffer_arg) {
  return google_protobuf_empty_pb.Empty.deserializeBinary(new Uint8Array(buffer_arg));
}


var ConcertServiceService = exports.ConcertServiceService = {
  create: {
    path: '/entpb.ConcertService/Create',
    requestStream: false,
    responseStream: false,
    requestType: entpb_pb.CreateConcertRequest,
    responseType: entpb_pb.Concert,
    requestSerialize: serialize_entpb_CreateConcertRequest,
    requestDeserialize: deserialize_entpb_CreateConcertRequest,
    responseSerialize: serialize_entpb_Concert,
    responseDeserialize: deserialize_entpb_Concert,
  },
  get: {
    path: '/entpb.ConcertService/Get',
    requestStream: false,
    responseStream: false,
    requestType: entpb_pb.GetConcertRequest,
    responseType: entpb_pb.Concert,
    requestSerialize: serialize_entpb_GetConcertRequest,
    requestDeserialize: deserialize_entpb_GetConcertRequest,
    responseSerialize: serialize_entpb_Concert,
    responseDeserialize: deserialize_entpb_Concert,
  },
  update: {
    path: '/entpb.ConcertService/Update',
    requestStream: false,
    responseStream: false,
    requestType: entpb_pb.UpdateConcertRequest,
    responseType: entpb_pb.Concert,
    requestSerialize: serialize_entpb_UpdateConcertRequest,
    requestDeserialize: deserialize_entpb_UpdateConcertRequest,
    responseSerialize: serialize_entpb_Concert,
    responseDeserialize: deserialize_entpb_Concert,
  },
  delete: {
    path: '/entpb.ConcertService/Delete',
    requestStream: false,
    responseStream: false,
    requestType: entpb_pb.DeleteConcertRequest,
    responseType: google_protobuf_empty_pb.Empty,
    requestSerialize: serialize_entpb_DeleteConcertRequest,
    requestDeserialize: deserialize_entpb_DeleteConcertRequest,
    responseSerialize: serialize_google_protobuf_Empty,
    responseDeserialize: deserialize_google_protobuf_Empty,
  },
  list: {
    path: '/entpb.ConcertService/List',
    requestStream: false,
    responseStream: false,
    requestType: entpb_pb.ListConcertRequest,
    responseType: entpb_pb.ListConcertResponse,
    requestSerialize: serialize_entpb_ListConcertRequest,
    requestDeserialize: deserialize_entpb_ListConcertRequest,
    responseSerialize: serialize_entpb_ListConcertResponse,
    responseDeserialize: deserialize_entpb_ListConcertResponse,
  },
  batchCreate: {
    path: '/entpb.ConcertService/BatchCreate',
    requestStream: false,
    responseStream: false,
    requestType: entpb_pb.BatchCreateConcertsRequest,
    responseType: entpb_pb.BatchCreateConcertsResponse,
    requestSerialize: serialize_entpb_BatchCreateConcertsRequest,
    requestDeserialize: deserialize_entpb_BatchCreateConcertsRequest,
    responseSerialize: serialize_entpb_BatchCreateConcertsResponse,
    responseDeserialize: deserialize_entpb_BatchCreateConcertsResponse,
  },
};

exports.ConcertServiceClient = grpc.makeGenericClientConstructor(ConcertServiceService);
var ConcertSessionServiceService = exports.ConcertSessionServiceService = {
  create: {
    path: '/entpb.ConcertSessionService/Create',
    requestStream: false,
    responseStream: false,
    requestType: entpb_pb.CreateConcertSessionRequest,
    responseType: entpb_pb.ConcertSession,
    requestSerialize: serialize_entpb_CreateConcertSessionRequest,
    requestDeserialize: deserialize_entpb_CreateConcertSessionRequest,
    responseSerialize: serialize_entpb_ConcertSession,
    responseDeserialize: deserialize_entpb_ConcertSession,
  },
  get: {
    path: '/entpb.ConcertSessionService/Get',
    requestStream: false,
    responseStream: false,
    requestType: entpb_pb.GetConcertSessionRequest,
    responseType: entpb_pb.ConcertSession,
    requestSerialize: serialize_entpb_GetConcertSessionRequest,
    requestDeserialize: deserialize_entpb_GetConcertSessionRequest,
    responseSerialize: serialize_entpb_ConcertSession,
    responseDeserialize: deserialize_entpb_ConcertSession,
  },
  update: {
    path: '/entpb.ConcertSessionService/Update',
    requestStream: false,
    responseStream: false,
    requestType: entpb_pb.UpdateConcertSessionRequest,
    responseType: entpb_pb.ConcertSession,
    requestSerialize: serialize_entpb_UpdateConcertSessionRequest,
    requestDeserialize: deserialize_entpb_UpdateConcertSessionRequest,
    responseSerialize: serialize_entpb_ConcertSession,
    responseDeserialize: deserialize_entpb_ConcertSession,
  },
  delete: {
    path: '/entpb.ConcertSessionService/Delete',
    requestStream: false,
    responseStream: false,
    requestType: entpb_pb.DeleteConcertSessionRequest,
    responseType: google_protobuf_empty_pb.Empty,
    requestSerialize: serialize_entpb_DeleteConcertSessionRequest,
    requestDeserialize: deserialize_entpb_DeleteConcertSessionRequest,
    responseSerialize: serialize_google_protobuf_Empty,
    responseDeserialize: deserialize_google_protobuf_Empty,
  },
  list: {
    path: '/entpb.ConcertSessionService/List',
    requestStream: false,
    responseStream: false,
    requestType: entpb_pb.ListConcertSessionRequest,
    responseType: entpb_pb.ListConcertSessionResponse,
    requestSerialize: serialize_entpb_ListConcertSessionRequest,
    requestDeserialize: deserialize_entpb_ListConcertSessionRequest,
    responseSerialize: serialize_entpb_ListConcertSessionResponse,
    responseDeserialize: deserialize_entpb_ListConcertSessionResponse,
  },
  batchCreate: {
    path: '/entpb.ConcertSessionService/BatchCreate',
    requestStream: false,
    responseStream: false,
    requestType: entpb_pb.BatchCreateConcertSessionsRequest,
    responseType: entpb_pb.BatchCreateConcertSessionsResponse,
    requestSerialize: serialize_entpb_BatchCreateConcertSessionsRequest,
    requestDeserialize: deserialize_entpb_BatchCreateConcertSessionsRequest,
    responseSerialize: serialize_entpb_BatchCreateConcertSessionsResponse,
    responseDeserialize: deserialize_entpb_BatchCreateConcertSessionsResponse,
  },
};

exports.ConcertSessionServiceClient = grpc.makeGenericClientConstructor(ConcertSessionServiceService);
var SectionServiceService = exports.SectionServiceService = {
  create: {
    path: '/entpb.SectionService/Create',
    requestStream: false,
    responseStream: false,
    requestType: entpb_pb.CreateSectionRequest,
    responseType: entpb_pb.Section,
    requestSerialize: serialize_entpb_CreateSectionRequest,
    requestDeserialize: deserialize_entpb_CreateSectionRequest,
    responseSerialize: serialize_entpb_Section,
    responseDeserialize: deserialize_entpb_Section,
  },
  get: {
    path: '/entpb.SectionService/Get',
    requestStream: false,
    responseStream: false,
    requestType: entpb_pb.GetSectionRequest,
    responseType: entpb_pb.Section,
    requestSerialize: serialize_entpb_GetSectionRequest,
    requestDeserialize: deserialize_entpb_GetSectionRequest,
    responseSerialize: serialize_entpb_Section,
    responseDeserialize: deserialize_entpb_Section,
  },
  update: {
    path: '/entpb.SectionService/Update',
    requestStream: false,
    responseStream: false,
    requestType: entpb_pb.UpdateSectionRequest,
    responseType: entpb_pb.Section,
    requestSerialize: serialize_entpb_UpdateSectionRequest,
    requestDeserialize: deserialize_entpb_UpdateSectionRequest,
    responseSerialize: serialize_entpb_Section,
    responseDeserialize: deserialize_entpb_Section,
  },
  delete: {
    path: '/entpb.SectionService/Delete',
    requestStream: false,
    responseStream: false,
    requestType: entpb_pb.DeleteSectionRequest,
    responseType: google_protobuf_empty_pb.Empty,
    requestSerialize: serialize_entpb_DeleteSectionRequest,
    requestDeserialize: deserialize_entpb_DeleteSectionRequest,
    responseSerialize: serialize_google_protobuf_Empty,
    responseDeserialize: deserialize_google_protobuf_Empty,
  },
  list: {
    path: '/entpb.SectionService/List',
    requestStream: false,
    responseStream: false,
    requestType: entpb_pb.ListSectionRequest,
    responseType: entpb_pb.ListSectionResponse,
    requestSerialize: serialize_entpb_ListSectionRequest,
    requestDeserialize: deserialize_entpb_ListSectionRequest,
    responseSerialize: serialize_entpb_ListSectionResponse,
    responseDeserialize: deserialize_entpb_ListSectionResponse,
  },
  batchCreate: {
    path: '/entpb.SectionService/BatchCreate',
    requestStream: false,
    responseStream: false,
    requestType: entpb_pb.BatchCreateSectionsRequest,
    responseType: entpb_pb.BatchCreateSectionsResponse,
    requestSerialize: serialize_entpb_BatchCreateSectionsRequest,
    requestDeserialize: deserialize_entpb_BatchCreateSectionsRequest,
    responseSerialize: serialize_entpb_BatchCreateSectionsResponse,
    responseDeserialize: deserialize_entpb_BatchCreateSectionsResponse,
  },
};

exports.SectionServiceClient = grpc.makeGenericClientConstructor(SectionServiceService);
var TicketServiceService = exports.TicketServiceService = {
  create: {
    path: '/entpb.TicketService/Create',
    requestStream: false,
    responseStream: false,
    requestType: entpb_pb.CreateTicketRequest,
    responseType: entpb_pb.Ticket,
    requestSerialize: serialize_entpb_CreateTicketRequest,
    requestDeserialize: deserialize_entpb_CreateTicketRequest,
    responseSerialize: serialize_entpb_Ticket,
    responseDeserialize: deserialize_entpb_Ticket,
  },
  get: {
    path: '/entpb.TicketService/Get',
    requestStream: false,
    responseStream: false,
    requestType: entpb_pb.GetTicketRequest,
    responseType: entpb_pb.Ticket,
    requestSerialize: serialize_entpb_GetTicketRequest,
    requestDeserialize: deserialize_entpb_GetTicketRequest,
    responseSerialize: serialize_entpb_Ticket,
    responseDeserialize: deserialize_entpb_Ticket,
  },
  update: {
    path: '/entpb.TicketService/Update',
    requestStream: false,
    responseStream: false,
    requestType: entpb_pb.UpdateTicketRequest,
    responseType: entpb_pb.Ticket,
    requestSerialize: serialize_entpb_UpdateTicketRequest,
    requestDeserialize: deserialize_entpb_UpdateTicketRequest,
    responseSerialize: serialize_entpb_Ticket,
    responseDeserialize: deserialize_entpb_Ticket,
  },
  delete: {
    path: '/entpb.TicketService/Delete',
    requestStream: false,
    responseStream: false,
    requestType: entpb_pb.DeleteTicketRequest,
    responseType: google_protobuf_empty_pb.Empty,
    requestSerialize: serialize_entpb_DeleteTicketRequest,
    requestDeserialize: deserialize_entpb_DeleteTicketRequest,
    responseSerialize: serialize_google_protobuf_Empty,
    responseDeserialize: deserialize_google_protobuf_Empty,
  },
  list: {
    path: '/entpb.TicketService/List',
    requestStream: false,
    responseStream: false,
    requestType: entpb_pb.ListTicketRequest,
    responseType: entpb_pb.ListTicketResponse,
    requestSerialize: serialize_entpb_ListTicketRequest,
    requestDeserialize: deserialize_entpb_ListTicketRequest,
    responseSerialize: serialize_entpb_ListTicketResponse,
    responseDeserialize: deserialize_entpb_ListTicketResponse,
  },
  batchCreate: {
    path: '/entpb.TicketService/BatchCreate',
    requestStream: false,
    responseStream: false,
    requestType: entpb_pb.BatchCreateTicketsRequest,
    responseType: entpb_pb.BatchCreateTicketsResponse,
    requestSerialize: serialize_entpb_BatchCreateTicketsRequest,
    requestDeserialize: deserialize_entpb_BatchCreateTicketsRequest,
    responseSerialize: serialize_entpb_BatchCreateTicketsResponse,
    responseDeserialize: deserialize_entpb_BatchCreateTicketsResponse,
  },
};

exports.TicketServiceClient = grpc.makeGenericClientConstructor(TicketServiceService);
